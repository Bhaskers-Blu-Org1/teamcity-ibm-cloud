buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath "org.junit.platform:junit-platform-gradle-plugin:1.0.1"
  }
}

plugins {
  id "com.github.rodm.teamcity-server" version "1.0"
}

teamcity {
  version = teamcityVersion

  server {
    descriptor {
      name = "teamcity-ibm"
      displayName = "IBM Cloud Plugin"
      version = project.version
      vendorName = project.vendorName
      vendorUrl = "http://ibm.com"
      description = "TeamCity IBM Cloud Server Plugin"
      downloadUrl = "https://github.ibm.com/StrategicOnboarding/teamcity-softlayer/"
      email = "scottwn@ibm.com"
      useSeparateClassloader = false

    }
  }
}

repositories {
  mavenCentral()
}

dependencies {
  agent project(path: ":ibm-cloud-agent", configuration: "plugin")
  server project(":ibm-cloud-server")

  provided "org.jetbrains.teamcity.internal:server:$teamcityVersion"
  provided "org.jetbrains.teamcity.internal:web:$teamcityVersion"
  provided "org.jetbrains.teamcity:cloud-server-api:$teamcityVersion"
  provided "org.jetbrains.teamcity:cloud-interface:$teamcityVersion"
  provided "org.jetbrains.teamcity:cloud-shared:$teamcityVersion"
  
  compile "com.softlayer.api:softlayer-api-client:0.2.5"
  compile "org.apiguardian:apiguardian-api:1.0.0"
  compile "org.json:json:20171018"
  testCompile(
    "org.junit.jupiter:junit-jupiter-api:5.0.1"
  )
  testRuntime(
    "org.junit.jupiter:junit-jupiter-engine:5.0.1"
  )
}

serverPlugin.baseName = 'teamcity-ibm'

test {
  testLogging {
	showStandardStreams = true
  }
}

apply plugin: "org.junit.platform.gradle.plugin"
